// Generated by GraphWalker (http://www.graphwalker.org)
package org.myorg.testautomation;

import com.eviware.soapui.tools.SoapUITestCaseRunner;
import org.graphwalker.core.condition.EdgeCoverage;
import org.graphwalker.core.condition.ReachedVertex;
import org.graphwalker.core.condition.TimeDuration;
import org.graphwalker.core.generator.AStarPath;
import org.graphwalker.core.generator.RandomPath;
import org.graphwalker.core.machine.ExecutionContext;
import org.graphwalker.java.test.TestBuilder;
import org.junit.Test;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.concurrent.TimeUnit;

/**
 * SoapUI 5 project running on Graphwalker
 *
 * This class represents the operations to be executed
 * when Graphwalker traverses the model. The stub generated
 * by the Graphwalker CLI is in the target directory.
 *
 * Methods prefixed with "e_" are edges, "v_" are vertices.
 *
 * The underlying model can be found at {@link SimpleTest#MODEL_PATH}
 *
 * The underlying model can be found at {@link SimpleTest#SOAPUI_PROJECT_PATH}
 * Methods in this class call according testsuites in the given project
 */
public class SimpleTest extends ExecutionContext implements Login {
    public static final Path MODEL_PATH = Paths.get("org/myorg/testautomation/Login.graphml");
    public static final String SOAPUI_PROJECT_PATH = "login/src/main/resources/soapui/GW-Test-Project-soapui-project.xml";

    @Override
    public void e_InvalidCredentials() {

        //Try login with invalid credentials
        SoapUITestCaseRunner runner = new SoapUITestCaseRunner();
        runner.setProjectFile(SOAPUI_PROJECT_PATH);
        runner.setTestSuite("InvalidLogin");
        try {
            runner.run();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void e_ValidCredentials() {

        //Invoke SoapUI testcase with valid credentials
        SoapUITestCaseRunner runner = new SoapUITestCaseRunner();
        runner.setProjectFile(SOAPUI_PROJECT_PATH);
        runner.setTestSuite("ValidLogin");
        try {
            runner.run();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void v_LoginPrompted() {
        System.out.println("v_LoginPrompted: Insert test code here!");
    }

    @Override
    public void v_ClientOnHomepage() {
        System.out.println("v_ClientOnHomepage: Insert test code here!");
    }

    @Override
    public void e_ToggleRememberMe() {
        System.out.println("e_ToggleRememberMe: Insert test code here!");
    }

    @Override
    public void e_Exit() {
        System.out.println("e_Exit: Insert test code here!");
    }

    @Override
    public void e_Close() {
        System.out.println("e_Close: Insert test code here!");
    }

    @Override
    public void e_Logout() {
        System.out.println("e_Logout: Insert test code here!");
    }

    @Override
    public void e_Init() {
        System.out.println("e_Init: Insert test code here!");
    }

    @Override
    public void v_Browse() {
        System.out.println("v_Browse: Insert test code here!");
    }

    @Override
    public void e_StartClient() {
        System.out.println("e_StartClient: Insert test code here!");
    }

    @Test
    public void runSmokeTest() {
        new TestBuilder()
                .setModel(MODEL_PATH)
                .setContext(new SimpleTest())
                .setPathGenerator(new AStarPath(new ReachedVertex("v_Browse")))
                .setStart("e_Init")
                .execute();
    }

    @Test
    public void runFunctionalTest() {
        new TestBuilder()
                .setModel(MODEL_PATH)
                .setContext(new SimpleTest())
                .setPathGenerator(new RandomPath(new EdgeCoverage(100)))
                .setStart("e_Init")
                .execute();
    }

    //@Test
    public void runStabilityTest() {
        new TestBuilder()
                .setModel(MODEL_PATH)
                .setContext(new SimpleTest())
                .setPathGenerator(new RandomPath(new TimeDuration(30, TimeUnit.SECONDS)))
                .setStart("e_Init")
                .execute();
    }

}